note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RFC_CERTIFICATE_DATA_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	subject:  detachable C_STRING
			-- Access member `subject`
		require
			exists: exists
		do
			if attached c_subject (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_subject (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_subject (a_value: C_STRING) 
			-- Change the value of member `subject` to `a_value`.
		require
			exists: exists
		do
			set_c_subject (item, a_value.item )
		end

	issuer:  detachable C_STRING
			-- Access member `issuer`
		require
			exists: exists
		do
			if attached c_issuer (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_issuer (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_issuer (a_value: C_STRING) 
			-- Change the value of member `issuer` to `a_value`.
		require
			exists: exists
		do
			set_c_issuer (item, a_value.item )
		end

	validto: NATURAL
			-- Access member `validTo`
		require
			exists: exists
		do
			Result := c_validto (item)
		ensure
			result_correct: Result = c_validto (item)
		end

	set_validto (a_value: NATURAL) 
			-- Change the value of member `validTo` to `a_value`.
		require
			exists: exists
		do
			set_c_validto (item, a_value)
		ensure
			validto_set: a_value = validto
		end

	validfrom: NATURAL
			-- Access member `validFrom`
		require
			exists: exists
		do
			Result := c_validfrom (item)
		ensure
			result_correct: Result = c_validfrom (item)
		end

	set_validfrom (a_value: NATURAL) 
			-- Change the value of member `validFrom` to `a_value`.
		require
			exists: exists
		do
			set_c_validfrom (item, a_value)
		ensure
			validfrom_set: a_value = validfrom
		end

	signature:  detachable C_STRING
			-- Access member `signature`
		require
			exists: exists
		do
			if attached c_signature (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_signature (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_signature (a_value: C_STRING) 
			-- Change the value of member `signature` to `a_value`.
		require
			exists: exists
		do
			set_c_signature (item, a_value.item )
		end

	next: detachable RFC_CERTIFICATE_DATA_STRUCT_API 
			-- Access member `next`
		require
			exists: exists
		do
			if attached c_next (item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_next (item) = default_pointer 
			result_not_void: attached Result as l_result implies l_result.item = c_next (item) 
		end

	set_next (a_value: RFC_CERTIFICATE_DATA_STRUCT_API) 
			-- Set member `next`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_next (item, a_value.item)
		ensure
			next_set: attached next as l_value implies l_value.item = a_value.item
		end

feature {NONE} -- Implementation wrapper for struct struct _RFC_CERTIFICATE_DATA

	sizeof_external: INTEGER 
		external
			"C inline use <sapnwrfc.h>"
		alias
			"sizeof(struct _RFC_CERTIFICATE_DATA)"
		end

	c_subject (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->subject
			]"
		end

	set_c_subject (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->subject =  (SAP_UC const*)$a_value
			]"
		ensure
			subject_set: a_value = c_subject (an_item)
		end

	c_issuer (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->issuer
			]"
		end

	set_c_issuer (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->issuer =  (SAP_UC const*)$a_value
			]"
		ensure
			issuer_set: a_value = c_issuer (an_item)
		end

	c_validto (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->validTo
			]"
		end

	set_c_validto (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->validTo =  (SAP_ULLONG)$a_value
			]"
		ensure
			validto_set: a_value = c_validto (an_item)
		end

	c_validfrom (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->validFrom
			]"
		end

	set_c_validfrom (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->validFrom =  (SAP_ULLONG)$a_value
			]"
		ensure
			validfrom_set: a_value = c_validfrom (an_item)
		end

	c_signature (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->signature
			]"
		end

	set_c_signature (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->signature =  (SAP_UC const*)$a_value
			]"
		ensure
			signature_set: a_value = c_signature (an_item)
		end

	c_next (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->next
			]"
		end

	set_c_next (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_CERTIFICATE_DATA*)$an_item)->next =  (struct _RFC_CERTIFICATE_DATA*)$a_value
			]"
		ensure
			next_set: a_value = c_next (an_item)
		end

end
