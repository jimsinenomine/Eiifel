note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RFC_FIELD_DESC_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	name: POINTER
			-- Access member `name`
		require
			exists: exists
		do
			Result := c_name (item)
		ensure
			result_correct: Result = c_name (item)
		end

	type: INTEGER
			-- Access member `type`
		require
			exists: exists
		do
			Result := c_type (item)
		ensure
			result_correct: Result = c_type (item)
		end

	set_type (a_value: INTEGER) 
			-- Change the value of member `type` to `a_value`.
		require
			exists: exists
		do
			set_c_type (item, a_value)
		ensure
			type_set: a_value = type
		end

	nuclength: NATURAL
			-- Access member `nucLength`
		require
			exists: exists
		do
			Result := c_nuclength (item)
		ensure
			result_correct: Result = c_nuclength (item)
		end

	set_nuclength (a_value: NATURAL) 
			-- Change the value of member `nucLength` to `a_value`.
		require
			exists: exists
		do
			set_c_nuclength (item, a_value)
		ensure
			nuclength_set: a_value = nuclength
		end

	nucoffset: NATURAL
			-- Access member `nucOffset`
		require
			exists: exists
		do
			Result := c_nucoffset (item)
		ensure
			result_correct: Result = c_nucoffset (item)
		end

	set_nucoffset (a_value: NATURAL) 
			-- Change the value of member `nucOffset` to `a_value`.
		require
			exists: exists
		do
			set_c_nucoffset (item, a_value)
		ensure
			nucoffset_set: a_value = nucoffset
		end

	uclength: NATURAL
			-- Access member `ucLength`
		require
			exists: exists
		do
			Result := c_uclength (item)
		ensure
			result_correct: Result = c_uclength (item)
		end

	set_uclength (a_value: NATURAL) 
			-- Change the value of member `ucLength` to `a_value`.
		require
			exists: exists
		do
			set_c_uclength (item, a_value)
		ensure
			uclength_set: a_value = uclength
		end

	ucoffset: NATURAL
			-- Access member `ucOffset`
		require
			exists: exists
		do
			Result := c_ucoffset (item)
		ensure
			result_correct: Result = c_ucoffset (item)
		end

	set_ucoffset (a_value: NATURAL) 
			-- Change the value of member `ucOffset` to `a_value`.
		require
			exists: exists
		do
			set_c_ucoffset (item, a_value)
		ensure
			ucoffset_set: a_value = ucoffset
		end

	decimals: NATURAL
			-- Access member `decimals`
		require
			exists: exists
		do
			Result := c_decimals (item)
		ensure
			result_correct: Result = c_decimals (item)
		end

	set_decimals (a_value: NATURAL) 
			-- Change the value of member `decimals` to `a_value`.
		require
			exists: exists
		do
			set_c_decimals (item, a_value)
		ensure
			decimals_set: a_value = decimals
		end

	typedeschandle: detachable RFC_TYPE_DESC_HANDLE_STRUCT_API 
			-- Access member `typeDescHandle`
		require
			exists: exists
		do
			if attached c_typedeschandle (item) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_typedeschandle (item) = default_pointer 
			result_not_void: attached Result as l_result implies l_result.item = c_typedeschandle (item) 
		end

	set_typedeschandle (a_value: RFC_TYPE_DESC_HANDLE_STRUCT_API) 
			-- Set member `typeDescHandle`
		require
			a_value_not_void: a_value /= Void
			exists: exists
		do
			set_c_typedeschandle (item, a_value.item)
		ensure
			typedeschandle_set: attached typedeschandle as l_value implies l_value.item = a_value.item
		end

	extendeddescription: POINTER
			-- Access member `extendedDescription`
		require
			exists: exists
		do
			Result := c_extendeddescription (item)
		ensure
			result_correct: Result = c_extendeddescription (item)
		end

	set_extendeddescription (a_value: POINTER) 
			-- Change the value of member `extendedDescription` to `a_value`.
		require
			exists: exists
		do
			set_c_extendeddescription (item, a_value)
		ensure
			extendeddescription_set: a_value = extendeddescription
		end

feature {NONE} -- Implementation wrapper for struct struct _RFC_FIELD_DESC

	sizeof_external: INTEGER 
		external
			"C inline use <sapnwrfc.h>"
		alias
			"sizeof(struct _RFC_FIELD_DESC)"
		end

	c_name (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->name
			]"
		end

	c_type (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->type
			]"
		end

	set_c_type (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->type =  (RFCTYPE)$a_value
			]"
		ensure
			type_set: a_value = c_type (an_item)
		end

	c_nuclength (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->nucLength
			]"
		end

	set_c_nuclength (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->nucLength =  (unsigned)$a_value
			]"
		ensure
			nuclength_set: a_value = c_nuclength (an_item)
		end

	c_nucoffset (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->nucOffset
			]"
		end

	set_c_nucoffset (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->nucOffset =  (unsigned)$a_value
			]"
		ensure
			nucoffset_set: a_value = c_nucoffset (an_item)
		end

	c_uclength (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->ucLength
			]"
		end

	set_c_uclength (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->ucLength =  (unsigned)$a_value
			]"
		ensure
			uclength_set: a_value = c_uclength (an_item)
		end

	c_ucoffset (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->ucOffset
			]"
		end

	set_c_ucoffset (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->ucOffset =  (unsigned)$a_value
			]"
		ensure
			ucoffset_set: a_value = c_ucoffset (an_item)
		end

	c_decimals (an_item: POINTER): NATURAL
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->decimals
			]"
		end

	set_c_decimals (an_item: POINTER; a_value: NATURAL) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->decimals =  (unsigned)$a_value
			]"
		ensure
			decimals_set: a_value = c_decimals (an_item)
		end

	c_typedeschandle (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->typeDescHandle
			]"
		end

	set_c_typedeschandle (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->typeDescHandle =  (RFC_TYPE_DESC_HANDLE)$a_value
			]"
		ensure
			typedeschandle_set: a_value = c_typedeschandle (an_item)
		end

	c_extendeddescription (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->extendedDescription
			]"
		end

	set_c_extendeddescription (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_FIELD_DESC*)$an_item)->extendedDescription =  (void*)$a_value
			]"
		ensure
			extendeddescription_set: a_value = c_extendeddescription (an_item)
		end

end
