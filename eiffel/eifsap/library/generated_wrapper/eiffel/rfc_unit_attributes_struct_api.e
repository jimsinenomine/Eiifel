note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RFC_UNIT_ATTRIBUTES_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	kerneltrace: INTEGER
			-- Access member `kernelTrace`
		require
			exists: exists
		do
			Result := c_kerneltrace (item)
		ensure
			result_correct: Result = c_kerneltrace (item)
		end

	set_kerneltrace (a_value: INTEGER) 
			-- Change the value of member `kernelTrace` to `a_value`.
		require
			exists: exists
		do
			set_c_kerneltrace (item, a_value)
		ensure
			kerneltrace_set: a_value = kerneltrace
		end

	sattrace: INTEGER
			-- Access member `satTrace`
		require
			exists: exists
		do
			Result := c_sattrace (item)
		ensure
			result_correct: Result = c_sattrace (item)
		end

	set_sattrace (a_value: INTEGER) 
			-- Change the value of member `satTrace` to `a_value`.
		require
			exists: exists
		do
			set_c_sattrace (item, a_value)
		ensure
			sattrace_set: a_value = sattrace
		end

	unithistory: INTEGER
			-- Access member `unitHistory`
		require
			exists: exists
		do
			Result := c_unithistory (item)
		ensure
			result_correct: Result = c_unithistory (item)
		end

	set_unithistory (a_value: INTEGER) 
			-- Change the value of member `unitHistory` to `a_value`.
		require
			exists: exists
		do
			set_c_unithistory (item, a_value)
		ensure
			unithistory_set: a_value = unithistory
		end

	lock: INTEGER
			-- Access member `lock`
		require
			exists: exists
		do
			Result := c_lock (item)
		ensure
			result_correct: Result = c_lock (item)
		end

	set_lock (a_value: INTEGER) 
			-- Change the value of member `lock` to `a_value`.
		require
			exists: exists
		do
			set_c_lock (item, a_value)
		ensure
			lock_set: a_value = lock
		end

	nocommitcheck: INTEGER
			-- Access member `noCommitCheck`
		require
			exists: exists
		do
			Result := c_nocommitcheck (item)
		ensure
			result_correct: Result = c_nocommitcheck (item)
		end

	set_nocommitcheck (a_value: INTEGER) 
			-- Change the value of member `noCommitCheck` to `a_value`.
		require
			exists: exists
		do
			set_c_nocommitcheck (item, a_value)
		ensure
			nocommitcheck_set: a_value = nocommitcheck
		end

	user: POINTER
			-- Access member `user`
		require
			exists: exists
		do
			Result := c_user (item)
		ensure
			result_correct: Result = c_user (item)
		end

	client: POINTER
			-- Access member `client`
		require
			exists: exists
		do
			Result := c_client (item)
		ensure
			result_correct: Result = c_client (item)
		end

	tcode: POINTER
			-- Access member `tCode`
		require
			exists: exists
		do
			Result := c_tcode (item)
		ensure
			result_correct: Result = c_tcode (item)
		end

	program: POINTER
			-- Access member `program`
		require
			exists: exists
		do
			Result := c_program (item)
		ensure
			result_correct: Result = c_program (item)
		end

	hostname: POINTER
			-- Access member `hostname`
		require
			exists: exists
		do
			Result := c_hostname (item)
		ensure
			result_correct: Result = c_hostname (item)
		end

	sendingdate: POINTER
			-- Access member `sendingDate`
		require
			exists: exists
		do
			Result := c_sendingdate (item)
		ensure
			result_correct: Result = c_sendingdate (item)
		end

	sendingtime: POINTER
			-- Access member `sendingTime`
		require
			exists: exists
		do
			Result := c_sendingtime (item)
		ensure
			result_correct: Result = c_sendingtime (item)
		end

feature {NONE} -- Implementation wrapper for struct struct _RFC_UNIT_ATTRIBUTES

	sizeof_external: INTEGER 
		external
			"C inline use <sapnwrfc.h>"
		alias
			"sizeof(struct _RFC_UNIT_ATTRIBUTES)"
		end

	c_kerneltrace (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->kernelTrace
			]"
		end

	set_c_kerneltrace (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->kernelTrace =  (short)$a_value
			]"
		ensure
			kerneltrace_set: a_value = c_kerneltrace (an_item)
		end

	c_sattrace (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->satTrace
			]"
		end

	set_c_sattrace (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->satTrace =  (short)$a_value
			]"
		ensure
			sattrace_set: a_value = c_sattrace (an_item)
		end

	c_unithistory (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->unitHistory
			]"
		end

	set_c_unithistory (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->unitHistory =  (short)$a_value
			]"
		ensure
			unithistory_set: a_value = c_unithistory (an_item)
		end

	c_lock (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->lock
			]"
		end

	set_c_lock (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->lock =  (short)$a_value
			]"
		ensure
			lock_set: a_value = c_lock (an_item)
		end

	c_nocommitcheck (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->noCommitCheck
			]"
		end

	set_c_nocommitcheck (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->noCommitCheck =  (short)$a_value
			]"
		ensure
			nocommitcheck_set: a_value = c_nocommitcheck (an_item)
		end

	c_user (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->user
			]"
		end

	c_client (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->client
			]"
		end

	c_tcode (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->tCode
			]"
		end

	c_program (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->program
			]"
		end

	c_hostname (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->hostname
			]"
		end

	c_sendingdate (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->sendingDate
			]"
		end

	c_sendingtime (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_UNIT_ATTRIBUTES*)$an_item)->sendingTime
			]"
		end

end
