note

	description: "This file has been generated by WrapC. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class RFC_ERROR_INFO_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	code: INTEGER
			-- Access member `code`
		require
			exists: exists
		do
			Result := c_code (item)
		ensure
			result_correct: Result = c_code (item)
		end

	set_code (a_value: INTEGER) 
			-- Change the value of member `code` to `a_value`.
		require
			exists: exists
		do
			set_c_code (item, a_value)
		ensure
			code_set: a_value = code
		end

	group: INTEGER
			-- Access member `group`
		require
			exists: exists
		do
			Result := c_group (item)
		ensure
			result_correct: Result = c_group (item)
		end

	set_group (a_value: INTEGER) 
			-- Change the value of member `group` to `a_value`.
		require
			exists: exists
		do
			set_c_group (item, a_value)
		ensure
			group_set: a_value = group
		end

	key: POINTER
			-- Access member `key`
		require
			exists: exists
		do
			Result := c_key (item)
		ensure
			result_correct: Result = c_key (item)
		end

	message: POINTER
			-- Access member `message`
		require
			exists: exists
		do
			Result := c_message (item)
		ensure
			result_correct: Result = c_message (item)
		end

	abapmsgclass: POINTER
			-- Access member `abapMsgClass`
		require
			exists: exists
		do
			Result := c_abapmsgclass (item)
		ensure
			result_correct: Result = c_abapmsgclass (item)
		end

	abapmsgtype: POINTER
			-- Access member `abapMsgType`
		require
			exists: exists
		do
			Result := c_abapmsgtype (item)
		ensure
			result_correct: Result = c_abapmsgtype (item)
		end

	abapmsgnumber: POINTER
			-- Access member `abapMsgNumber`
		require
			exists: exists
		do
			Result := c_abapmsgnumber (item)
		ensure
			result_correct: Result = c_abapmsgnumber (item)
		end

	abapmsgv1: POINTER
			-- Access member `abapMsgV1`
		require
			exists: exists
		do
			Result := c_abapmsgv1 (item)
		ensure
			result_correct: Result = c_abapmsgv1 (item)
		end

	abapmsgv2: POINTER
			-- Access member `abapMsgV2`
		require
			exists: exists
		do
			Result := c_abapmsgv2 (item)
		ensure
			result_correct: Result = c_abapmsgv2 (item)
		end

	abapmsgv3: POINTER
			-- Access member `abapMsgV3`
		require
			exists: exists
		do
			Result := c_abapmsgv3 (item)
		ensure
			result_correct: Result = c_abapmsgv3 (item)
		end

	abapmsgv4: POINTER
			-- Access member `abapMsgV4`
		require
			exists: exists
		do
			Result := c_abapmsgv4 (item)
		ensure
			result_correct: Result = c_abapmsgv4 (item)
		end

feature {NONE} -- Implementation wrapper for struct struct _RFC_ERROR_INFO

	sizeof_external: INTEGER 
		external
			"C inline use <sapnwrfc.h>"
		alias
			"sizeof(struct _RFC_ERROR_INFO)"
		end

	c_code (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->code
			]"
		end

	set_c_code (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->code =  (RFC_RC)$a_value
			]"
		ensure
			code_set: a_value = c_code (an_item)
		end

	c_group (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->group
			]"
		end

	set_c_group (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->group =  (RFC_ERROR_GROUP)$a_value
			]"
		ensure
			group_set: a_value = c_group (an_item)
		end

	c_key (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->key
			]"
		end

	c_message (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->message
			]"
		end

	c_abapmsgclass (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgClass
			]"
		end

	c_abapmsgtype (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgType
			]"
		end

	c_abapmsgnumber (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgNumber
			]"
		end

	c_abapmsgv1 (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgV1
			]"
		end

	c_abapmsgv2 (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgV2
			]"
		end

	c_abapmsgv3 (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgV3
			]"
		end

	c_abapmsgv4 (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <sapnwrfc.h>"
		alias
			"[
				((struct _RFC_ERROR_INFO*)$an_item)->abapMsgV4
			]"
		end

end
